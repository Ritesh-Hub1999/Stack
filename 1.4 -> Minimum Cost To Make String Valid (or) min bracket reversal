https://www.codingninjas.com/codestudio/problems/minimum-cost-to-make-string-valid_1115770
Sample Input 1:
---------------
2
{{{}
{{}{}}

Sample Output 1:
---------------
1
0

approch:
-------
valid string/bracket:- agr bracket open kr rha hai tho close bhi krna hoga

condition :- No. of bracket isequal to no. of close braces.
             har close braces should have the open bracket before it
             
Logic: total no. of braces string mai even hoga if string ki length odd 
       hai tho return -1.
      
Invalid string:
1-> {{{{ -> sara open braces hai tho wo invalid hai
2-> }}}} -> sara closed braces hai tho wo invalid hai
3-> }}{{ -> kuch open or kuch closed honga tho wo valid hai

Algo:
-----
step 1: odd size hai string ka return -1
step 2: i/p string mai sa valid wala part remove kr do
        remaning part wo above 3 type mai sa ek hoga
        
 step 3: min no. of reversal
        }}}{{{
        a-> count hai closed braces ka
        b-> count of open braces
        (a+1/2) (b+1/2)
        
code:
----
int findMinimumCost(string str) {
    stack<char>s;
    
    if(str.length() & 1)
        return -1;
        
    //string mai sa valid wala part remove kr do    
    for(int i=0;i<str.size();i++){
        char ch=str[i];
        if(ch=='{'){
            s.push(ch);
        }
        else{
            //ch closing bracket h
            if(!s.empty() && s.top()=='{'){
                s.pop();
            }
            else{
                s.push(ch);
            }
        }
    }
    //stack invalid expression rakhta ho
    int a=0;int b=0;
    while(!s.empty()){
        if(s.top()=='{'){
            b++;
        }
        else{
            a++;
        }
        s.pop();   
    }
    int ans = (a+1)/2 + (b+1)/2;
    return ans;
}
